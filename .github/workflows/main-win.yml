name: Windows
on:
  workflow_dispatch:
  #watch:
  #  types: started
jobs:
  Windows:
    strategy:
      matrix: 
        msystem: [mingw32, ucrt64]
        
    runs-on: windows-latest
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true
        install: >-
          tmate
          openssh
          
    - name: SSH connection to Actions
      shell: msys2 {0}
      run: |
        if [[ ! -z "$SKIP_DEBUGGER" ]]; then
          echo "Skipping debugger because SKIP_DEBUGGER enviroment variable is set"
          exit
        fi
        # Generate ssh key if needed
        [ -e ~/.ssh/id_rsa ] || ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""

        # Run deamonized tmate
        echo Running tmate...
        tmate -S /tmp/tmate.sock new-session -d
        tmate -S /tmp/tmate.sock wait tmate-ready

        # Print connection info
        echo ________________________________________________________________________________
        echo
        echo To connect to this session copy-n-paste the following into a terminal:
        tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}'
        echo After connecting you can run 'touch /tmp/keepalive' to disable the 15m timeout

        if [[ ! -z "$SLACK_WEBHOOK_URL" ]]; then
          MSG=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          curl -X POST -H 'Content-type: application/json' --data "{\"text\":\"\`$MSG\`\"}" $SLACK_WEBHOOK_URL
        fi
        while [ -S /tmp/tmate.sock ]; do
          sleep 1
        done
      
